create table emp( salespid int primary key, salepname varchar(10));

create table car(model varchar(10) NOT NULL PRIMARY KEY,salespid int NOT NULL,FOREIGN KEY (salespid) references emp(salespid));

create table sales(model varchar(10) NOT NULL, custn varchar(10) NOT NULL, date DATE NOT NULL, alespid int NOT NULL, Foreign key (salespid) references emp(salespid), foreign key (model) references car(model));





INSERT INTO sales (salespid, custn, model)VALUES (2, 'bh',32);


table: carid, salespid


before sales car 
before insert :: sql trigger: pid, carid




create




spark-submit --master local --driver-memory 0.4g --executor-memory  0.4g  --class classpath jarfile

spark-submit --master local --driver-memory 1g --executor-memory  1g  --class classpath jarfile datatest.py   /home/hadoop/jar.jar


echo "deb https://repo.scala-sbt.org/scalasbt/debian all main" | sudo tee /etc/apt/sources.list.d/sbt.list
echo "deb https://repo.scala-sbt.org/scalasbt/debian /" | sudo tee /etc/apt/sources.list.d/sbt_old.list
curl -sL "https://keyserver.ubuntu.com/pks/lookup?op=get&search=0x2EE0EA64E40A89B84B2DF73499E82A75642AC823" | sudo apt-key add
apt-get update
apt-get install sbt


echo "deb https://repo.scala-sbt.org/scalasbt/debian all main" | tee /etc/apt/sources.list.d/sbt.list
echo "deb https://repo.scala-sbt.org/scalasbt/debian /" | tee /etc/apt/sources.list.d/sbt_old.list
curl -sL "https://keyserver.ubuntu.com/pks/lookup?op=get&search=0x2EE0EA64E40A89B84B2DF73499E82A75642AC823" | apt-key add
apt-get update
apt-get install sbt
















create table car(model varchar(10) NOT NULL PRIMARY KEY,salespid int NOT NULL,
FOREIGN KEY (salespid) references emp(salespid));

create table emp( salespid int primary key, salepname varchar(10));

You are appointed by a car dealership to create their database infrastructure. There is only one store. In each business day, cars are being sold by a team of salespersons. Each transaction would contain information on the date and time of transaction, customer transacted with, and the car that was sold.

The following are known:


create table emp( sales_personid int primary key ,sale_personname varchar(10));
	
#Each car can only be sold by one salesperson.
#	There are multiple manufacturersâ€™ cars sold.
#	Each car has the following characteristics:
#	Manufacturer
#	Model name
#	Serial number
#	Weight
#	Price
create table car(model_name varchar(10) NOT NULL ,sales_personid int NOT NULL UNIQUE,car_manufacturer VARCHAR(10) NOT NULL, weight int NOT NULL, price int NOT NULL, serial_num INT PRIMARY KEY, FOREIGN KEY (sales_personid) references emp(sales_personid));

#Each sale transaction contains the following information:
	
#Customer Name
#	Customer Phone
#	Salesperson
#	Characteristics of car sold

create table sales(date DATE NOT NULL, sales_personid int NOT NULL, cust_name varchar(10) NOT NULL, price int, Customer_phone VARCHAR(10) NOT NULL, serial_num INT, FOREIGN KEY (serial_num) references car(serial_num), FOREIGN KEY (sales_personid) references emp(sales_personid));

insert into sales(sales_personid, cust_name, Customer_phone, serial_num) values(33,'akash','987');




#1.	I want to know the list of our customers and their spending.
	select cust_name, sum(price) as cust_spending from sales group by cust_name;


#2.	I want to find out the top 3 car manufacturers that customers bought by sales (quantity) and the sales number for it in the current month.
	
	select count(car_manufacturer) as cnt from sales ORDER BY cnt limit 3;
	
	select car_manufacture, sum(price) as Total_sales from sales WHERE MONTH(date) = MONTH(now()) and YEAR(date) = YEAR(now()) GROUP BY car_manufacture ORDER BY Total_sales LIMIT 3
	






















